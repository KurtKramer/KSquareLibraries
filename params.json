{"name":"Ksquarelibraries","tagline":"c++ Tool Kit routines developed over the past 15 years.","body":"### Welcome to KSquareUtilities by Kurt Kramer.\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n\r\n# KSquareLibraries\r\nThe libraries with their included code/classes are the accumulation of work that I have built up over the last several years, mostly during my graduate program.  This has become a useful tool-kit for several projects that I have worked on.  The code is meant to be O/S neutral such that it can be compiled and used in either Windows or Linux.\r\n\r\n## KKBase\r\nSome example functionality implemented include string management, Matrix operations, Image Processing, Token Parsing, Statistics, Histogramming, and common operating system routines.  Most O/S specific code is implemented in the module \"osServices.cpp\".\r\n\r\n## KKLineScanner\r\nClasses and code that support the processing of data from line-scan cameras.  Support for Dynamic-Flat-Field correction.  Storage and retrieval of imagery data in 2,3,4, and 8 bit-depth gray-scale with support for embedding instrumentation data as well as text. \r\n\r\n## KKMachineLearning\r\nClasses and Code that support Machine-Learning implementations.  \r\n\r\n##  OutsideLibraries  \r\nThat is libraries and code from other sources.\r\n Outside Libraries FFTW and ZLIB To use all the classes in this Library you will need the libraries fftw and lib123.  \"fftw\" stands for \"Fastest Fourier Transform in The West\".  It can be downloaded from http://www.fftw.org/.  \"zlib123\" is a library that is used to compress and un-compress data. can be found at http://www.zlib.net/ and is used by the Compressor class.  \r\n\r\nTheir are two Macros that determine weather the two libraries listed above are utilized or more simple implementations included in KKBase.\r\n* 'FFTW_AVAILABLE' - Indicates that you want to utilize the FFTW library.  otherwise a simple Fourier transform will be utilized.\r\n* 'ZLIB_AVAILABLE' - Indicates that 'zlib' library is available.  If not defined the class Compressor will not do anything.\r\n \r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}